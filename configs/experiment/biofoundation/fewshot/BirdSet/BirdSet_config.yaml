# @package _global_
#package global is neccessary!
defaults:
  - override /logger: wandb_embedding.yaml
  - override /datamodule: birdset_embedding.yaml
  - override /module: multilabel_embedding.yaml
  - override /callbacks: default.yaml
  - override /trainer: single_gpu.yaml
  - override /paths: default.yaml
  - override /hydra: default.yaml
  - override /datamodule/transforms: embedding_transform.yaml # Here the audio is transformed to a spectrogram
  - override /datamodule/transforms/waveform_augmentations: none.yaml # No augmentations for now
  - override /datamodule/transforms/spectrogram_augmentations: none.yaml

tags: ["BEANS", "embeddings", "multilabel", "k-32"]
seed: 1
train: True
test: True



logger:
  wandb:
    tags: ${tags}
    mode: online

module:
  network: 
    model:
      _target_: birdset.modules.models.two_layer_classifier.TwoLayerClassifier
      in_features: ${datamodule.embedding_model.embedding_size}
      hidden_dim: 256
      dropout_rate: 0.8
      num_classes: ${datamodule.dataset.n_classes}
  optimizer:
    lr: 5e-4
    weight_decay: 5e-4
    
trainer:
  devices: [3]
  limit_val_batches: ${datamodule.val_batches} 
  min_epochs: 1
  max_epochs: 100

datamodule:
  val_batches: null
  embedding_model:  # This is needed to provide num_classes to the classifier model (Isn't used but set to 0 by default and injected to late in train.py)
    model:
      num_classes: null


  k_samples: 32

  loaders:
    train:
      batch_size: 8
      shuffle: True
      num_workers: 4
      drop_last: True
    valid:
      batch_size: 32
      num_workers: 16
      shuffle: False
    test:
      batch_size: 32
      num_workers: 16
      shuffle: False

callbacks:
  model_checkpoint:
    save_last: False
    every_n_epochs: null
    every_n_train_steps: null
  early_stopping:
    _target_: lightning.pytorch.callbacks.EarlyStopping
    monitor: "val/cmAP"
    patience: 4
    mode: 'max'
    min_delta: 5e-3
    verbose: False
    check_finite: True
